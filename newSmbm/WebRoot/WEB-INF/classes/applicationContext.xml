<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!-- 加载database.properties文件中的内容 -->
	<context:property-placeholder location="classpath:database.properties" />
	<!-- 配置数据源 ，dbcp BasicDataSource提供了close()方法关闭数据源，所以必须设定destroy-method=”close”属性， 
		以便Spring容器关闭时，数据源能够正常关闭；销毁方法调用close(),是将连接关闭，并不是真正的把资源销毁。 当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<property name="maxActive" value="30" />
		<property name="maxIdle" value="5" />
	</bean>
	<!-- spring和mybatis的整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<!-- 引入xml的mapper文件 -->
			<list>
				<value>classpath:cn/bdqn/dao/**/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- 自动生成dao的实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.bdqn.dao"></property>
	</bean>
	<!-- 配置声明式事务 -->
	<!-- 事务管理者 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 事务传播属性 -->
	<tx:advice transaction-manager="txManager" id="myAdvice">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- 事务切面配置 -->
	<aop:config>
		<aop:pointcut expression="execution(* cn.bdqn.service.*.*(..))"
			id="myPoint" />
		<aop:advisor advice-ref="myAdvice" pointcut-ref="myPoint" />
	</aop:config>
	<!--扫描所有使用注解的包，如果有多个包，就用逗号分隔开来，默认会包含子包文件夹如service包包含service.impl -->
	<context:component-scan base-package="cn.bdqn.service"></context:component-scan>
</beans>
